{"ast":null,"code":"import _asyncToGenerator from \"/Users/WillAustin/Documents/GitHub/nodebucket/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-cookie-service\";\nexport let SignInService = /*#__PURE__*/(() => {\n  class SignInService {\n    constructor(http, cookieService) {\n      this.http = http;\n      this.cookieService = cookieService;\n      this.employeeIds = ['1007', '1008', '1009', '1010', '1011', '1012'];\n    }\n    findEmployeeById(employeeId) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        const response = yield fetch(`/api/employees/${employeeId}`);\n        const employee = yield response.json();\n        if (!response.ok) {\n          throw new Error(`Failed to fetch employee data. Status: ${response.status}`);\n        }\n        _this.cookieService.set('session_user', employeeId.toString(), 1);\n        _this.cookieService.set('name', employee.firstName);\n        _this.employee = employee; // Set the fetched employee data into the service variable\n      })();\n    }\n\n    catch(error) {\n      console.error('Error fetching employee data:', error);\n    }\n    validateEmployee(employeeId) {\n      return this.employeeIds.includes(employeeId);\n    }\n    static #_ = this.ɵfac = function SignInService_Factory(t) {\n      return new (t || SignInService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.CookieService));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: SignInService,\n      factory: SignInService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return SignInService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}