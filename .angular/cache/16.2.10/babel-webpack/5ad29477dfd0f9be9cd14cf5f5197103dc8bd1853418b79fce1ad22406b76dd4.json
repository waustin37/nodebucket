{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../tasks.service\";\nimport * as i2 from \"ngx-cookie-service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction TasksDialogComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtext(1, \" Please input a task to add to the \\\"To-Do\\\" List. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let TasksDialogComponent = /*#__PURE__*/(() => {\n  class TasksDialogComponent {\n    constructor(tasksService, cookieService, dialogRef) {\n      this.tasksService = tasksService;\n      this.cookieService = cookieService;\n      this.dialogRef = dialogRef;\n      this.newTask = '';\n      this.showError = false;\n      this.employeeId = '';\n    }\n    submitTask() {\n      if (this.newTask.trim() !== '') {\n        this.employeeId = this.cookieService.get('session_user');\n        console.log(this.employeeId);\n        // Set the employeeId from the service\n        if (this.employeeId) {\n          this.tasksService.addTask(this.employeeId, this.newTask).subscribe(() => {\n            this.dialogRef.close();\n            this.tasksService.fetchTasks(this.employeeId);\n            console.log('Task Added Successfully');\n          }, error => {\n            console.error('Error adding task:', error); // Log the error\n          });\n        } else {\n          console.error('No employeeId found.'); // Log error if employeeId is not set\n        }\n      } else {\n        this.showError = true;\n      }\n    }\n    static #_ = this.ɵfac = function TasksDialogComponent_Factory(t) {\n      return new (t || TasksDialogComponent)(i0.ɵɵdirectiveInject(i1.TasksService), i0.ɵɵdirectiveInject(i2.CookieService), i0.ɵɵdirectiveInject(i3.MatDialogRef));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TasksDialogComponent,\n      selectors: [[\"app-tasks-dialog\"]],\n      decls: 9,\n      vars: 2,\n      consts: [[1, \"card\"], [1, \"new-task-form\"], [\"class\", \"message-error\", 4, \"ngIf\"], [\"type\", \"text\", \"placeholder\", \"Enter task...\", 1, \"input\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [1, \"message-error\"]],\n      template: function TasksDialogComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\");\n          i0.ɵɵtext(3, \"Create New Task\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(4, TasksDialogComponent_div_4_Template, 2, 0, \"div\", 2);\n          i0.ɵɵelementStart(5, \"input\", 3);\n          i0.ɵɵlistener(\"ngModelChange\", function TasksDialogComponent_Template_input_ngModelChange_5_listener($event) {\n            return ctx.newTask = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(6, \"br\");\n          i0.ɵɵelementStart(7, \"button\", 4);\n          i0.ɵɵlistener(\"click\", function TasksDialogComponent_Template_button_click_7_listener() {\n            return ctx.submitTask();\n          });\n          i0.ɵɵtext(8, \"Add Task\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ctx.showError);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngModel\", ctx.newTask);\n        }\n      },\n      dependencies: [i4.NgIf, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel],\n      styles: [\".card[_ngcontent-%COMP%]{background-color:#fff}.new-task-form[_ngcontent-%COMP%]{padding:50px;background-color:#858cab;border:2pt solid white;font-family:Josefin Slab,serif}h1[_ngcontent-%COMP%]{background-color:#858cab;font-family:Josefin Slab,serif;font-size:50px;margin-bottom:20px}input[_ngcontent-%COMP%]{background-color:#a1b5c6;border:1pt solid black;margin-bottom:20px}button[_ngcontent-%COMP%]{background-color:#6d738d;margin-top:20px;color:#fff;border:1pt solid rgb(223,222,234);border-radius:10px;padding:10px 20px;font-weight:500;font-size:20px;cursor:pointer;transition:background-color .3s,color .3s,transform .2s,box-shadow .2s;transform:translate(0);box-shadow:2px 2px 5px #0003}button[_ngcontent-%COMP%]:hover{background-color:#2f3c64;color:#fff;transform:translateY(-5px);box-shadow:2px 2px 5px #0006}.input[_ngcontent-%COMP%]{margin:auto auto 20px;border:2pt solid black;background-color:#b0b6d2;width:80%;font-size:20pt;padding:15pt}.message-error[_ngcontent-%COMP%]{margin:10px 0;padding:12px;font-size:14pt;color:#d8000c;background-color:#ffd2d2}[_ngcontent-%COMP%]::placeholder{color:#403f45}\"]\n    });\n  }\n  return TasksDialogComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}