{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let TasksService = /*#__PURE__*/(() => {\n  class TasksService {\n    constructor(http) {\n      this.http = http;\n      this.todoTasksSubject = new BehaviorSubject([]);\n      this.doneTasksSubject = new BehaviorSubject([]);\n      this.todoTasks$ = this.todoTasksSubject.asObservable();\n      this.doneTasks$ = this.doneTasksSubject.asObservable();\n    }\n    // Sets employee ID to a string\n    setEmployeeId(id) {\n      this.employeeId = id;\n    }\n    // Gets employee ID\n    getEmployeeId() {\n      return this.employeeId;\n    }\n    //Fetch Tasks\n    fetchTasks(employeeId) {\n      this.http.get(`https://localhost:3000/api/employees/${employeeId}/todoTasks`).subscribe(data => {\n        const todoTasks = data.todoTasks;\n        const doneTasks = data.doneTasks;\n        this.todoTasksSubject.next(todoTasks);\n        this.doneTasksSubject.next(doneTasks);\n      }, error => {\n        console.error('Error fetching tasks: ', error);\n      });\n    }\n    addTask(employeeId, taskDescription) {\n      return this.http.post(`https://localhost:3000/api/employees/${employeeId}/todoTasks`, {\n        description: taskDescription\n      });\n    }\n    deleteTask(employeeId, taskId, isCompletedTask = false) {\n      const endpoint = isCompletedTask ? 'doneTasks' : 'todoTasks';\n      return this.http.delete(`https://localhost:3000/api/employees/${employeeId}/${endpoint}/${taskId}`);\n    }\n    //How the tasks move from To-Do to Completed\n    moveTaskToCompleted(employeeId, taskId) {\n      return this.http.put(`https://localhost:3000/api/employees/${employeeId}/todoTasks/${taskId}`, {});\n    }\n    static #_ = this.ɵfac = function TasksService_Factory(t) {\n      return new (t || TasksService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TasksService,\n      factory: TasksService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return TasksService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}