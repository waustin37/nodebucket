{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../sign-in.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/card\";\nfunction SignInComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMessage, \" \");\n  }\n}\nfunction SignInComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 11);\n    i0.ɵɵtext(2, \" Employee ID must be a numeric value. \");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport let SignInComponent = /*#__PURE__*/(() => {\n  class SignInComponent {\n    constructor(router, fb, signInService) {\n      this.router = router;\n      this.fb = fb;\n      this.signInService = signInService;\n    }\n    ngOnInit() {\n      this.signInForm = this.fb.group({\n        employeeId: ['', Validators.compose([Validators.required, Validators.pattern('^[0-9]*$')])]\n      });\n    }\n    get form() {\n      return this.signInForm.controls;\n    }\n    onSubmit() {\n      const formValues = this.signInForm.value;\n      const employeeId = formValues.employeeId;\n      this.signInService.findEmployeeById(employeeId).then(() => {\n        this.router.navigate(['/session/tasks']);\n      }).catch(error => {\n        console.log(error);\n        this.errorMessage = 'Employee ID Not Found. Please try again.';\n      });\n    }\n    static #_ = this.ɵfac = function SignInComponent_Factory(t) {\n      return new (t || SignInComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.SignInService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SignInComponent,\n      selectors: [[\"app-sign-in\"]],\n      decls: 23,\n      vars: 4,\n      consts: [[\"fxLayout\", \"column\"], [\"fxFlex\", \"\"], [1, \"sign-in-container\", \"container\"], [1, \"container\"], [\"class\", \"message-error\", 4, \"ngIf\"], [4, \"ngIf\"], [2, \"box-shadow\", \"none\"], [3, \"formGroup\", \"ngSubmit\"], [\"for\", \"txtemployeeId\", \"id\", \"lblemployeeId\", 1, \"container\"], [\"type\", \"text\", \"required\", \"\", \"formControlName\", \"employeeId\", \"id\", \"txtemployeeId\", \"name\", \"txtemployeeId\", 1, \"input\"], [\"type\", \"submit\", 1, \"btnsubmit\", 3, \"disabled\"], [1, \"message-error\"]],\n      template: function SignInComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"br\")(1, \"br\");\n          i0.ɵɵelementStart(2, \"div\", 0)(3, \"div\", 1)(4, \"div\", 2)(5, \"div\", 3)(6, \"h1\", 3);\n          i0.ɵɵtext(7, \"Sign In\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"mat-card-subtitle\", 3);\n          i0.ɵɵtext(9, \" Enter a Valid Employee ID to Proceed \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"mat-card-content\", 3);\n          i0.ɵɵtemplate(11, SignInComponent_div_11_Template, 2, 1, \"div\", 4);\n          i0.ɵɵtemplate(12, SignInComponent_div_12_Template, 3, 0, \"div\", 5);\n          i0.ɵɵelementStart(13, \"mat-card\", 6)(14, \"form\", 7);\n          i0.ɵɵlistener(\"ngSubmit\", function SignInComponent_Template_form_ngSubmit_14_listener() {\n            ctx.onSubmit();\n            return ctx.signInForm.reset();\n          });\n          i0.ɵɵelementStart(15, \"div\", 3)(16, \"div\", 3)(17, \"label\", 8);\n          i0.ɵɵtext(18, \"Employee ID\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(19, \"input\", 9);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(20, \"mat-card-actions\", 3)(21, \"button\", 10);\n          i0.ɵɵtext(22, \"Submit\");\n          i0.ɵɵelementEnd()()()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(11);\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.form[\"employeeId\"].errors && ctx.form[\"employeeId\"].touched);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"formGroup\", ctx.signInForm);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"disabled\", !ctx.signInForm.valid);\n        }\n      },\n      dependencies: [i4.NgIf, i5.MatCard, i5.MatCardActions, i5.MatCardContent, i5.MatCardSubtitle, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName],\n      styles: [\".sign-in-container[_ngcontent-%COMP%]{width:35%;margin:auto;border:3pt solid black;box-shadow:0 0 10px #ffffff80}.container[_ngcontent-%COMP%]{background-color:#858cab}.message-error[_ngcontent-%COMP%]{margin:10px 0;padding:12px;color:#d8000c;background-color:#ffd2d2}.sign-in-container[_ngcontent-%COMP%] > mat-card-title[_ngcontent-%COMP%], mat-card-subtitle[_ngcontent-%COMP%]{text-align:center;font-family:Josefin Slab,serif}.btnsubmit[_ngcontent-%COMP%]{background-color:#6d738d;margin:auto;color:#fff;border:1pt solid rgb(223,222,234);border-radius:10px;padding:10px 20px;font-weight:500;font-size:20px;cursor:pointer;transition:background-color .3s,color .3s,transform .2s,box-shadow .2s;transform:translate(0);box-shadow:2px 2px 5px #0003}.btnsubmit[_ngcontent-%COMP%]:hover{background-color:#2f3c64;color:#fff;transform:translateY(-5px);box-shadow:2px 2px 5px #0006}.input[_ngcontent-%COMP%]{margin:auto auto 20px;border:2pt solid black;background-color:#b0b6d2;width:80%;font-size:20pt;font-weight:600;padding:5pt}#lblStudentId[_ngcontent-%COMP%]{margin-top:20px;font-size:14pt}h1[_ngcontent-%COMP%]{text-align:center;font-family:Josefin Slab,serif;padding-top:20px;font-size:24pt}\"]\n    });\n  }\n  return SignInComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}